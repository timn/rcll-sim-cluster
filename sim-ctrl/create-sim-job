#!/usr/bin/env python3

from job_generator import JobGenerator

import argparse
from traceback import print_exc

if __name__ == '__main__':
	parser = argparse.ArgumentParser(description='Create RCLL Cluster Sim Job')
	parser.add_argument('--team-cyan', metavar='NAME', required=True,
	                    help='Name of cyan team')
	parser.add_argument('--team-magenta', metavar='NAME', default="none",
	                    help='Name of magenta')
	parser.add_argument('--template', metavar='FILENAME', required=True,
	                    help='Template file for job parameters.')
	parser.add_argument('--debug', dest='debug', action='store_true',
	                    help='Template file for job parameters.')
	parser.add_argument('--dry-run', action='store_true',
	                    help='Only run generation, but do not store in work queue.')
	parser.add_argument('tournament_name', metavar="T-NAME",
	                    help='Tournament name (prefix for job names)')
	args = parser.parse_args()

	if args.dry_run:
		print("\n*** ATTENTION: This is a dry run, no jobs actually stored ***\n")

	try:
		jobgen = JobGenerator(args.template, args.debug, dry_run=args.dry_run)
		(jobname, idnum, params) = \
		    jobgen.generate_and_store(args.tournament_name, args.team_cyan, args.team_magenta)
		print("\nGenerated %s" % jobname)
	except:
		print("\nFailed to generate job")
		print_exc()
