#!/usr/bin/env python3


from work_queue import WorkQueue
from config import Configuration

import string
import random

def generate_random_id(team_cyan, team_magenta, suffix_length=8):
	return team_cyan + "-vs-" + team_magenta + ":" + \
		''.join(random.choice(string.ascii_uppercase + string.digits) for _ in range(suffix_length))
	#''.join(random.choices(string.ascii_uppercase + string.digits, k=8))

def generate_id(team_cyan, team_magenta, index, suffix_length=6):
	return team_cyan + "-vs-" + team_magenta + ":" + "{:0{width}}".format(index, width=suffix_length)

if __name__ == '__main__':
	config = Configuration()

	# The work queue will figure out a valid combination of MongoDB access
	# parameters, e.g., host/port, URI, or replica set discovery via DNS
	wq = WorkQueue(host=config.mongodb_host,
	               port=config.mongodb_port,
	               uri=config.mongodb_uri,
	               srv_name=config.mongodb_rs_srv,
	               database=config.mongodb_queue_db,
	               replicaset=config.mongodb_rs,
	               collection=config.mongodb_queue_col)

	jobname = generate_id("Carologistics", "A-Team", wq.total_num_jobs()+1)

	robots = ' '.join(["C-R%d" % i for i in range(1,4)])
	
	params = \
	{
		"elements": [
			{
			    "template": "sim-refbox",
			    "vars":	{
				    "rcll_sim_image": "defiant.kbsg.rwth-aachen.de:5000/timn/rcll-sim:2016-f25-kinetic",
				    "team_cyan": "Carologistics",
				    "team_magenta": "A-Team",
				    "robots": robots
			    },
				"sufficient_containers": ["run-game"]
		    }
			# ,
		    # {
			#     "template": "gzweb",
			#     "vars":	{
			# 	    "gzweb_image": "defiant.kbsg.rwth-aachen.de:5000/timn/gzweb:7",
			#     }
		    # }
		]
	}
	for i in range (1, 4):
		team_prefix="c"
		robot_pod = {
			"template": "robot-pod",
			"vars":	{
				"rcll_sim_image": "defiant.kbsg.rwth-aachen.de:5000/timn/rcll-sim:2016-f25-kinetic",
				"robot": {
					"pod_name": "robot-%s%d" % (team_prefix, i),
				"service_name": "robot-%s%d" % (team_prefix, i),
					"name": "%s-R%s" % (team_prefix.upper(), i),
					"num": i
				},
				"fawkes": {
					"service_name": "fawkes-%s%s" % (team_prefix, i),
					"port": 1920 + i
				}
			}
		}
		params["elements"].append(robot_pod)

	print("Creating %s\n%s\n" % (jobname, str(params)))
	wq.add_item(jobname, params)
