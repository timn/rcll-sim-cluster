# Headless service for robot Pod
apiVersion: v1
kind: Service
metadata:
  name: {{ robot.service_name }}
  namespace: {{ namespace }}
spec:
  selector:
    app: fawkes
    robot: {{ robot.name }}
  clusterIP: None
  ports:
  - port: 1
---
# Service for Fawkes on that robot
apiVersion: v1
kind: Service
metadata:
  name: {{ fawkes.service_name }}
  namespace: {{ namespace }}
spec:
  selector:
    app: fawkes
    robot: {{ robot.name }}
    team-color: {{ team.color|lower }}
  type: ClusterIP
  ports:
  - port: {{ fawkes.port }}
---
# Service for ROS on that robot
apiVersion: v1
kind: Service
metadata:
  name: {{ ros.service_name }}
  namespace: {{ namespace }}
spec:
  selector:
    # We match the robot pod, for which the main app is fawkes
    app: fawkes
    robot: {{ robot.name }}
  type: ClusterIP
  ports:
  - port: {{ ros.port }}
---
apiVersion: v1
kind: Pod
metadata:
  name: {{ robot.pod_name }}
  namespace: {{ namespace }}
  labels:
    robot: {{ robot.name }}
    app: fawkes
    team-color: {{ team.color|lower }}
{%- block labels_extra -%}
{%- endblock %}
  annotations:
    scheduler.alpha.kubernetes.io/tolerations: '[{"key":"exclusive", "operator":"Equal", "value":"rcll-sim"}]'
    pod.beta.kubernetes.io/init-containers: '[
        {
          "name": "wait-for-rcll-sim",
          "image": "{{ rcll_sim_image }}",
          "imagePullPolicy": "Always",
          "command": ["/opt/rcll-sim/wait-services"],
          "args": ["gazebo", "refbox"],
          "env": [
            {
              "name": "MAX_TRIES",
              "value": "60"
            }
          ]
        }
      ]'
spec:
  containers:
{%- block container_roscore %}
  - name: roscore
    image: {{ rcll_sim_image }}
    imagePullPolicy: Always
    command: ["/opt/rcll-sim/run-component"]
    args: ["roscore"]
    env:
    - name: ROS_MASTER_URI
      value: http://localhost:{{ ros.port }}
    resources:
      requests:
        memory: "200Mi"
        cpu: "250m"
      limits:
        memory: "200Mi"
        cpu: "250m"
{% endblock -%}
{%- block container_fawkes %}
  - name: fawkes
    image: {{ robot_pod_image }}
    imagePullPolicy: Always
    command: ["/opt/fawkes-runenv/run-fawkes"]
    env:
    - name: CONFIG
      value: gazsim-configurations/default/robotino{{ fawkes.config_num }}.yaml
    - name: META_PLUGIN
      value: gazsim-meta-robotino-ros,gazsim-meta-robotino-vision-high-level,gazsim-navgraph-generator{% if fawkes.plugins is defined %},{{ fawkes.plugins }}{% endif %}
    - name: LOG_LEVEL
      value: debug
    - name: GAZEBO_MASTER_URI
      value: http://gazebo:11345
    - name: ROS_MASTER_URI
      value: http://localhost:{{ ros.port }}

    - name: TEAM_NAME
      value: {{ team.name }}
    - name: TEAM_COLOR
      value: {{ team.color }}

    resources:
      requests:
        memory: "1Gi"
        cpu: "1"
      limits:
        memory: "1Gi"
        cpu: "1"

    readinessProbe:
      tcpSocket:
        port: {{ fawkes.port }}
      initialDelaySeconds: {{ fawkes.readiness_initial_delay|default("10") }}
      failureThreshold: {{ fawkes.readiness_failure_threshold|default("12") }}
{%- endblock %}

{% block container_localize_robot %}
  - name: localize-robot
    image: {{ robot_pod_image }}
    imagePullPolicy: Always
    command: ["/opt/rcll-sim/localize-robot"]
    args: ["{{ robot.name }}"]
    env:
    - name: REMOTE
      value: localhost:{{ fawkes.port }}

    readinessProbe:
      exec:
        command: ["cat", "/tmp/robot-localized"]
      initialDelaySeconds: {{ localize_readiness_initial_delay|default("10") }}
      periodSeconds: {{ localize_readiness_period|default("5") }}
      failureThreshold: {{ localize_readiness_failure_threshold|default("60") }}
{%- endblock %}

{% block container_extra -%}
{%- endblock %}

{% block volumes -%}
{%- endblock %}

  imagePullSecrets:
    - name: regsecret
  restartPolicy: Never

{% block pods -%}
{# Custom pods to be instantiated per robot may be placed in this block #}
{%- endblock %}
